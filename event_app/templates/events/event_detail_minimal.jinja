<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Event App | {{ event.name }}</title>
    <script>
        {% if owner %}
            function add_message() {
                var button = document.getElementById('message_add_button');
                var text = document.getElementById('message_input').value;
                var data = JSON.stringify({'message': text});
                button.disabled = true;
                var xhttp = new XMLHttpRequest();
                xhttp.onreadystatechange = function () {
                    if (this.readyState === 4 && this.status === 200) {
                        button.disabled = false;
                        location.reload();
                    }
                };
                xhttp.open("POST", "{{ url_for('ajax.event_add_message') }}", true);
                xhttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                xhttp.send('token={{ event.url_id }}&type=text&data=' + data);
            }
        {% else %}
            function urlBase64ToUint8Array(base64String) {
                const padding = '='.repeat((4 - base64String.length % 4) % 4);
                const base64 = (base64String + padding)
                    .replace(/-/g, '+')
                    .replace(/_/g, '/')
                ;
                const rawData = window.atob(base64);
                return Uint8Array.from([...rawData].map((char) => char.charCodeAt(0)));
            }

            function registerWorker() {
                navigator.serviceWorker.register('/service-worker.js');
                return navigator.serviceWorker.ready;
            }

            function subscribeUserToPush() {
                return registerWorker()
                    .then(function (registration) {
                        const subscribeOptions = {
                            userVisibleOnly: true,
                            applicationServerKey: urlBase64ToUint8Array('{{ config.WEB_PUSH_PUBLIC_KEY }}')
                        };

                        return registration.pushManager.subscribe(subscribeOptions);
                    })
                    .then(function (pushSubscription) {
                        return JSON.stringify(pushSubscription);
                    });
            }

            function saveSubscription() {
                subscribeUserToPush().then(function (data) {
                    return fetch('{{ url_for('ajax.save_web_push_data') }}', {
                        method: "POST",
                        credentials: 'same-origin',
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: data
                    });
                }).then(function (response) {
                    if (!response.ok) {
                        throw new Error('Bad status code from server.')
                    }
                });
            }

            function update_subscription() {
                var button = document.getElementById('update_subscription');
                button.disabled = true;
                var subscribed = button.classList.contains("subscribed");

                var data;
                if (subscribed) {
                    data = {
                        "token": "{{ event.url_id }}",
                        "email": false,
                        "push": false
                    };
                } else {
                    data = {
                        "token": "{{ event.url_id }}",
                        "email": true,
                        "push": true
                    };
                    saveSubscription();
                }
                return fetch('{{ url_for('ajax.update_event_subscription') }}', {
                    method: "POST",
                    credentials: 'same-origin',
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(data)
                }).then(function (response) {
                    if (!response.ok) {
                        throw new Error('Bad status code from server.')
                    } else {
                        response.json().then(function (response_data) {
                            if (response_data['email'] || response_data['push']) {
                                button.value = "Unsubscribe";
                                button.classList.add("subscribed");
                            } else {
                                button.value = "Subscribe";
                                button.classList.remove("subscribed");
                            }
                            button.disabled = false;
                        });
                    }
                });
            }
        {% endif %}
    </script>
</head>
<body>
<h1>{{ event.name }}</h1>
<h2>{{ event.description }}</h2>
{% if not owner %}
    <input type="button" value="{% if subscribed %}Unsubscribe{% else %}Subscribe{% endif %}" id="update_subscription"
           onclick="update_subscription()"{% if subscribed %} class="subscribed"{% endif %}>
{% else %}
    Add Message <textarea id="message_input" cols="30" rows="10" maxlength="280"></textarea>
    <input type="button" onclick="add_message()" value="Submit" id="message_add_button">
{% endif %}
<h1>Messages</h1>
<table>
    <tr>
        <th>Type</th>
        <th>Date</th>
        <th>Data</th>
    </tr>
    {% for message in messages %}
        <tr>
            <td>{{ message.type }}</td>
            <td>{{ message.timestamp }}</td>
            <td>{{ message.data }}</td>
        </tr>
    {% endfor %}
</table>
</body>
</html>